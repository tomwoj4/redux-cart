{"version":3,"sources":["components/Cart/CartItem.module.css","components/Shop/ProductItem.module.css","components/UI/Notification.module.css","components/Cart/CartButton.module.css","components/UI/Card.module.css","components/Cart/Cart.module.css","components/Layout/MainHeader.module.css","components/Shop/Products.module.css","components/UI/Card.js","store/cart-slice.js","components/Cart/CartItem.js","components/Cart/Cart.js","store/ui-slice.js","components/Cart/CartButton.js","components/Layout/MainHeader.js","components/Layout/Layout.js","components/Shop/ProductItem.js","components/Shop/Products.js","components/UI/Notification.js","App.js","store/cart-actions.js","store/store.js","index.js"],"names":["module","exports","Card","props","className","classes","card","children","cartSlice","createSlice","name","initialState","items","totalQuantity","changed","reducers","replaceCart","state","action","payload","addItemToCart","newItem","existingItem","find","item","id","quantity","totalPrice","price","push","title","removeItemFromCart","filter","cartActions","actions","CartItem","dispatch","useDispatch","total","toFixed","itemprice","details","onClick","Cart","cartItems","useSelector","cart","map","uiSlice","cartIsVisible","notification","toggle","showNotification","status","message","uiActions","CartButton","cartQuantity","button","badge","MainHeader","header","Layout","ProductItem","description","DUMMYPRODUCTS","Products","products","product","Notification","specialClasses","error","success","cssClasses","isInitial","App","showCart","ui","useEffect","a","fetchData","fetch","response","ok","Error","json","data","cartData","sendRequest","method","body","JSON","stringify","sendCartData","store","configureStore","reducer","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.8673ba76.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"CartItem_item__1zMOi\",\"details\":\"CartItem_details__2_Z3n\",\"quantity\":\"CartItem_quantity__DfEXm\",\"price\":\"CartItem_price__2Nl0j\",\"itemprice\":\"CartItem_itemprice__j9ZSt\",\"actions\":\"CartItem_actions__UwVPJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"ProductItem_item__WYS0J\",\"price\":\"ProductItem_price__1GiPR\",\"actions\":\"ProductItem_actions__14Yr-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"notification\":\"Notification_notification__3D5S5\",\"error\":\"Notification_error__2ILHS\",\"success\":\"Notification_success__3Ww1I\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"CartButton_button__3nU_b\",\"badge\":\"CartButton_badge__3njqM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"Card_card__1m44e\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"cart\":\"Cart_cart__3GqLz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"MainHeader_header__k5Wsz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"products\":\"Products_products__1PCvW\"};","import classes from './Card.module.css';\n\nconst Card = (props) => {\n  return (\n    <section\n      className={`${classes.card} ${props.className ? props.className : ''}`}\n    >\n      {props.children}\n    </section>\n  );\n};\n\nexport default Card;\n","import { createSlice } from '@reduxjs/toolkit';\n\nconst cartSlice = createSlice({\n  name: 'cart',\n  initialState: {\n    items: [],\n    totalQuantity: 0,\n    changed: false,\n  },\n  reducers: {\n    replaceCart(state, action) {\n      state.totalQuantity = action.payload.totalQuantity;\n      state.items = action.payload.items;\n    },\n    addItemToCart(state, action) {\n      const newItem = action.payload;\n      const existingItem = state.items.find((item) => item.id === newItem.id);\n      state.totalQuantity++;\n      state.changed = true;\n      if (!existingItem) {\n        state.items.push({\n          id: newItem.id,\n          price: newItem.price,\n          quantity: 1,\n          totalPrice: newItem.price,\n          name: newItem.title,\n        });\n      } else {\n        existingItem.quantity++;\n        existingItem.totalPrice = existingItem.totalPrice + newItem.price;\n      }\n    },\n    removeItemFromCart(state, action) {\n      const id = action.payload;\n      const existingItem = state.items.find((item) => item.id === id);\n      state.totalQuantity--;\n      state.changed = true;\n      if (existingItem.quantity === 1) {\n        state.items = state.items.filter((item) => item.id !== id);\n      } else {\n        existingItem.quantity--;\n        existingItem.totalPrice = existingItem.totalPrice - existingItem.price;\n      }\n    },\n  },\n});\n\nexport const cartActions = cartSlice.actions;\n\nexport default cartSlice;","import classes from \"./CartItem.module.css\";\nimport { useDispatch } from \"react-redux\";\nimport { cartActions } from \"../../store/cart-slice\";\n\nconst CartItem = (props) => {\n  const dispatch = useDispatch();\n  const { title, quantity, total, price, id } = props.item;\n\n  const addHandler = () => {\n    dispatch(cartActions.addItemToCart({ id, title, price }));\n  };\n\n  const deleteHandler = () => {\n    dispatch(cartActions.removeItemFromCart(id));\n  };\n\n  return (\n    <li className={classes.item}>\n      <header>\n        <h3>{title}</h3>\n        <div className={classes.price}>\n          ${total.toFixed(2)}\n          <span className={classes.itemprice}>(${price.toFixed(2)}/item)</span>\n        </div>\n      </header>\n      <div className={classes.details}>\n        <div className={classes.quantity}>\n          x <span>{quantity}</span>\n        </div>\n        <div className={classes.actions}>\n          <button onClick={deleteHandler}>-</button>\n          <button onClick={addHandler}>+</button>\n        </div>\n      </div>\n    </li>\n  );\n};\n\nexport default CartItem;\n","import Card from \"../UI/Card\";\nimport classes from \"./Cart.module.css\";\nimport CartItem from \"./CartItem\";\n\nimport { useSelector } from \"react-redux\";\n\nconst Cart = () => {\n  const cartItems = useSelector((state) => state.cart.items);\n  return (\n    <Card className={classes.cart}>\n      <h2>Your Shopping Cart</h2>\n      <ul>\n        {cartItems.map((item) => {\n          return (\n            <CartItem\n              key={item.id}\n              item={{\n                id: item.id,\n                title: item.name,\n                quantity: item.quantity,\n                total: item.totalPrice,\n                price: item.price,\n              }}\n            />\n          );\n        })}\n      </ul>\n    </Card>\n  );\n};\n\nexport default Cart;\n","import { createSlice } from '@reduxjs/toolkit';\n\nconst uiSlice = createSlice({\n  name: 'ui',\n  initialState: { cartIsVisible: false, notification: null },\n  reducers: {\n    toggle(state) {\n      state.cartIsVisible = !state.cartIsVisible;\n    },\n    showNotification(state, action) {\n      state.notification = {\n        status: action.payload.status,\n        title: action.payload.title,\n        message: action.payload.message,\n      };\n    },\n  },\n});\n\nexport const uiActions = uiSlice.actions;\n\nexport default uiSlice;","import { useDispatch, useSelector } from \"react-redux\";\nimport { uiActions } from \"../../store/ui-slice\";\n\nimport classes from \"./CartButton.module.css\";\n\nconst CartButton = (props) => {\n  const dispatch = useDispatch();\n  const cartQuantity = useSelector((state) => state.cart.totalQuantity);\n\n  const cartToggler = () => {\n    dispatch(uiActions.toggle());\n  };\n\n  return (\n    <button onClick={cartToggler} className={classes.button}>\n      <span>My Cart</span>\n      <span className={classes.badge}>{cartQuantity}</span>\n    </button>\n  );\n};\n\nexport default CartButton;\n","import CartButton from '../Cart/CartButton';\nimport classes from './MainHeader.module.css';\n\nconst MainHeader = (props) => {\n  return (\n    <header className={classes.header}>\n      <h1>ReduxCart</h1>\n      <nav>\n        <ul>\n          <li>\n            <CartButton />\n          </li>\n        </ul>\n      </nav>\n    </header>\n  );\n};\n\nexport default MainHeader;\n","import { Fragment } from 'react';\nimport MainHeader from './MainHeader';\n\nconst Layout = (props) => {\n  return (\n    <Fragment>\n      <MainHeader />\n      <main>{props.children}</main>\n    </Fragment>\n  );\n};\n\nexport default Layout;\n","import { useDispatch } from \"react-redux\";\nimport Card from \"../UI/Card\";\nimport classes from \"./ProductItem.module.css\";\nimport { cartActions } from \"../../store/cart-slice\";\n\nconst ProductItem = (props) => {\n  const dispatch = useDispatch();\n  const { title, price, description, id } = props;\n\n  const addToCartHandler = () => {\n    dispatch(cartActions.addItemToCart({ id, title, price }));\n  };\n\n  return (\n    <li className={classes.item}>\n      <Card>\n        <header>\n          <h3>{title}</h3>\n          <div className={classes.price}>${price.toFixed(2)}</div>\n        </header>\n        <p>{description}</p>\n        <div className={classes.actions}>\n          <button onClick={addToCartHandler}>Add to Cart</button>\n        </div>\n      </Card>\n    </li>\n  );\n};\n\nexport default ProductItem;\n","import ProductItem from \"./ProductItem\";\nimport classes from \"./Products.module.css\";\n\nconst DUMMYPRODUCTS = [\n  {\n    id: \"p1\",\n    title: \"test item\",\n    price: 5,\n    description: \"this is a test item\",\n  },\n  {\n    id: \"p2\",\n    title: \"An apple\",\n    price: 7,\n    description: \"It's healthy eat it\",\n  },\n  {\n    id: \"p2\",\n    title: \"A pizza\",\n    price: 3,\n    description: \"Italy's finest\",\n  },\n];\n\nconst Products = (props) => {\n  return (\n    <section className={classes.products}>\n      <h2>Buy your favorite products</h2>\n      <ul>\n        {DUMMYPRODUCTS.map((product) => {\n          return (\n            <ProductItem\n              key={product.id}\n              id={product.id}\n              title={product.title}\n              price={product.price}\n              description={product.description}\n            />\n          );\n        })}\n      </ul>\n    </section>\n  );\n};\n\nexport default Products;\n","import classes from \"./Notification.module.css\";\n\nconst Notification = (props) => {\n  let specialClasses = \"\";\n\n  if (props.status === \"error\") {\n    specialClasses = classes.error;\n  }\n  if (props.status === \"success\") {\n    specialClasses = classes.success;\n  }\n\n  const cssClasses = `${classes.notification} ${specialClasses}`;\n\n  return (\n    <section className={cssClasses}>\n      <h2>{props.title}</h2>\n      <p>{props.message}</p>\n    </section>\n  );\n};\n\nexport default Notification;\n","import { Fragment, useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport Cart from './components/Cart/Cart';\nimport Layout from './components/Layout/Layout';\nimport Products from './components/Shop/Products';\nimport Notification from './components/UI/Notification';\nimport { sendCartData, fetchCartData } from './store/cart-actions';\n\nlet isInitial = true;\n\nfunction App() {\n  const dispatch = useDispatch();\n  const showCart = useSelector((state) => state.ui.cartIsVisible);\n  const cart = useSelector((state) => state.cart);\n  const notification = useSelector((state) => state.ui.notification);\n\n  useEffect(() => {\n    dispatch(fetchCartData());\n  }, [dispatch]);\n\n  useEffect(() => {\n    if (isInitial) {\n      isInitial = false;\n      return;\n    }\n\n    if (cart.changed) {\n      dispatch(sendCartData(cart));\n    }\n  }, [cart, dispatch]);\n\n  return (\n    <Fragment>\n      {notification && (\n        <Notification\n          status={notification.status}\n          title={notification.title}\n          message={notification.message}\n        />\n      )}\n      <Layout>\n        {showCart && <Cart />}\n        <Products />\n      </Layout>\n    </Fragment>\n  );\n}\n\nexport default App;","import { uiActions } from './ui-slice';\nimport { cartActions } from './cart-slice';\n\nexport const fetchCartData = () => {\n  return async (dispatch) => {\n    const fetchData = async () => {\n      const response = await fetch(\n        \"https://react-backend-a6844-default-rtdb.europe-west1.firebasedatabase.app/cart.json\"\n);\n\n      if (!response.ok) {\n        throw new Error('Could not fetch cart data!');\n      }\n\n      const data = await response.json();\n\n      return data;\n    };\n\n    try {\n      const cartData = await fetchData();\n      dispatch(\n        cartActions.replaceCart({\n          items: cartData.items || [],\n          totalQuantity: cartData.totalQuantity,\n        })\n      );\n    } catch (error) {\n      dispatch(\n        uiActions.showNotification({\n          status: 'error',\n          title: 'Error!',\n          message: 'Fetching cart data failed!',\n        })\n      );\n    }\n  };\n};\n\nexport const sendCartData = (cart) => {\n  return async (dispatch) => {\n    dispatch(\n      uiActions.showNotification({\n        status: 'pending',\n        title: 'Sending...',\n        message: 'Sending cart data!',\n      })\n    );\n\n    const sendRequest = async () => {\n      const response = await fetch(\n        \"https://react-backend-a6844-default-rtdb.europe-west1.firebasedatabase.app/cart.json\",\n        {\n          method: 'PUT',\n          body: JSON.stringify({\n            items: cart.items,\n            totalQuantity: cart.totalQuantity,\n          }),\n        }\n      );\n\n      if (!response.ok) {\n        throw new Error('Sending cart data failed.');\n      }\n    };\n\n    try {\n      await sendRequest();\n\n      dispatch(\n        uiActions.showNotification({\n          status: 'success',\n          title: 'Success!',\n          message: 'Sent cart data successfully!',\n        })\n      );\n    } catch (error) {\n      dispatch(\n        uiActions.showNotification({\n          status: 'error',\n          title: 'Error!',\n          message: 'Sending cart data failed!',\n        })\n      );\n    }\n  };\n};","import { configureStore } from \"@reduxjs/toolkit\";\n\nimport uiSlice from \"./ui-slice\";\nimport cartSlice from \"./cart-slice\";\n\nconst store = configureStore({\n  reducer: { ui: uiSlice.reducer, cart: cartSlice.reducer },\n});\n\nexport default store;\n","import ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\n\nimport \"./index.css\";\nimport App from \"./App\";\nimport store from \"./store/store\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}