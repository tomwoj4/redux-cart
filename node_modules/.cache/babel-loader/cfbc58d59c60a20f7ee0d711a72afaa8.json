{"ast":null,"code":"import{createSlice}from'@reduxjs/toolkit';var cartSlice=createSlice({name:'cart',initialState:{items:[],totalQuantity:0,changed:false},reducers:{replaceCart:function replaceCart(state,action){state.totalQuantity=action.payload.totalQuantity;state.items=action.payload.items;},addItemToCart:function addItemToCart(state,action){var newItem=action.payload;var existingItem=state.items.find(function(item){return item.id===newItem.id;});state.totalQuantity++;state.changed=true;if(!existingItem){state.items.push({id:newItem.id,price:newItem.price,quantity:1,totalPrice:newItem.price,name:newItem.title});}else{existingItem.quantity++;existingItem.totalPrice=existingItem.totalPrice+newItem.price;}},removeItemFromCart:function removeItemFromCart(state,action){var id=action.payload;var existingItem=state.items.find(function(item){return item.id===id;});state.totalQuantity--;state.changed=true;if(existingItem.quantity===1){state.items=state.items.filter(function(item){return item.id!==id;});}else{existingItem.quantity--;existingItem.totalPrice=existingItem.totalPrice-existingItem.price;}}}});export var cartActions=cartSlice.actions;export default cartSlice;","map":{"version":3,"sources":["/Users/tomwojcik/Desktop/React/advanced-redux/src/store/cart-slice.js"],"names":["createSlice","cartSlice","name","initialState","items","totalQuantity","changed","reducers","replaceCart","state","action","payload","addItemToCart","newItem","existingItem","find","item","id","push","price","quantity","totalPrice","title","removeItemFromCart","filter","cartActions","actions"],"mappings":"AAAA,OAASA,WAAT,KAA4B,kBAA5B,CAEA,GAAMC,CAAAA,SAAS,CAAGD,WAAW,CAAC,CAC5BE,IAAI,CAAE,MADsB,CAE5BC,YAAY,CAAE,CACZC,KAAK,CAAE,EADK,CAEZC,aAAa,CAAE,CAFH,CAGZC,OAAO,CAAE,KAHG,CAFc,CAO5BC,QAAQ,CAAE,CACRC,WADQ,sBACIC,KADJ,CACWC,MADX,CACmB,CACzBD,KAAK,CAACJ,aAAN,CAAsBK,MAAM,CAACC,OAAP,CAAeN,aAArC,CACAI,KAAK,CAACL,KAAN,CAAcM,MAAM,CAACC,OAAP,CAAeP,KAA7B,CACD,CAJO,CAKRQ,aALQ,wBAKMH,KALN,CAKaC,MALb,CAKqB,CAC3B,GAAMG,CAAAA,OAAO,CAAGH,MAAM,CAACC,OAAvB,CACA,GAAMG,CAAAA,YAAY,CAAGL,KAAK,CAACL,KAAN,CAAYW,IAAZ,CAAiB,SAACC,IAAD,QAAUA,CAAAA,IAAI,CAACC,EAAL,GAAYJ,OAAO,CAACI,EAA9B,EAAjB,CAArB,CACAR,KAAK,CAACJ,aAAN,GACAI,KAAK,CAACH,OAAN,CAAgB,IAAhB,CACA,GAAI,CAACQ,YAAL,CAAmB,CACjBL,KAAK,CAACL,KAAN,CAAYc,IAAZ,CAAiB,CACfD,EAAE,CAAEJ,OAAO,CAACI,EADG,CAEfE,KAAK,CAAEN,OAAO,CAACM,KAFA,CAGfC,QAAQ,CAAE,CAHK,CAIfC,UAAU,CAAER,OAAO,CAACM,KAJL,CAKfjB,IAAI,CAAEW,OAAO,CAACS,KALC,CAAjB,EAOD,CARD,IAQO,CACLR,YAAY,CAACM,QAAb,GACAN,YAAY,CAACO,UAAb,CAA0BP,YAAY,CAACO,UAAb,CAA0BR,OAAO,CAACM,KAA5D,CACD,CACF,CAtBO,CAuBRI,kBAvBQ,6BAuBWd,KAvBX,CAuBkBC,MAvBlB,CAuB0B,CAChC,GAAMO,CAAAA,EAAE,CAAGP,MAAM,CAACC,OAAlB,CACA,GAAMG,CAAAA,YAAY,CAAGL,KAAK,CAACL,KAAN,CAAYW,IAAZ,CAAiB,SAACC,IAAD,QAAUA,CAAAA,IAAI,CAACC,EAAL,GAAYA,EAAtB,EAAjB,CAArB,CACAR,KAAK,CAACJ,aAAN,GACAI,KAAK,CAACH,OAAN,CAAgB,IAAhB,CACA,GAAIQ,YAAY,CAACM,QAAb,GAA0B,CAA9B,CAAiC,CAC/BX,KAAK,CAACL,KAAN,CAAcK,KAAK,CAACL,KAAN,CAAYoB,MAAZ,CAAmB,SAACR,IAAD,QAAUA,CAAAA,IAAI,CAACC,EAAL,GAAYA,EAAtB,EAAnB,CAAd,CACD,CAFD,IAEO,CACLH,YAAY,CAACM,QAAb,GACAN,YAAY,CAACO,UAAb,CAA0BP,YAAY,CAACO,UAAb,CAA0BP,YAAY,CAACK,KAAjE,CACD,CACF,CAlCO,CAPkB,CAAD,CAA7B,CA6CA,MAAO,IAAMM,CAAAA,WAAW,CAAGxB,SAAS,CAACyB,OAA9B,CAEP,cAAezB,CAAAA,SAAf","sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\n\nconst cartSlice = createSlice({\n  name: 'cart',\n  initialState: {\n    items: [],\n    totalQuantity: 0,\n    changed: false,\n  },\n  reducers: {\n    replaceCart(state, action) {\n      state.totalQuantity = action.payload.totalQuantity;\n      state.items = action.payload.items;\n    },\n    addItemToCart(state, action) {\n      const newItem = action.payload;\n      const existingItem = state.items.find((item) => item.id === newItem.id);\n      state.totalQuantity++;\n      state.changed = true;\n      if (!existingItem) {\n        state.items.push({\n          id: newItem.id,\n          price: newItem.price,\n          quantity: 1,\n          totalPrice: newItem.price,\n          name: newItem.title,\n        });\n      } else {\n        existingItem.quantity++;\n        existingItem.totalPrice = existingItem.totalPrice + newItem.price;\n      }\n    },\n    removeItemFromCart(state, action) {\n      const id = action.payload;\n      const existingItem = state.items.find((item) => item.id === id);\n      state.totalQuantity--;\n      state.changed = true;\n      if (existingItem.quantity === 1) {\n        state.items = state.items.filter((item) => item.id !== id);\n      } else {\n        existingItem.quantity--;\n        existingItem.totalPrice = existingItem.totalPrice - existingItem.price;\n      }\n    },\n  },\n});\n\nexport const cartActions = cartSlice.actions;\n\nexport default cartSlice;"]},"metadata":{},"sourceType":"module"}